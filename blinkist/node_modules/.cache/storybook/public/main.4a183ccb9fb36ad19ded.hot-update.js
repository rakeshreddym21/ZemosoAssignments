"use strict";
globalThis["webpackHotUpdateblinkist"]("main",{

/***/ "./src/stories/Atoms/Avatar/MyAvatar.stories.tsx":
/*!*******************************************************!*\
  !*** ./src/stories/Atoms/Avatar/MyAvatar.stories.tsx ***!
  \*******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AvatarWithA": () => (/* binding */ AvatarWithA),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _MyAvatar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MyAvatar */ "./src/stories/Atoms/Avatar/MyAvatar.tsx");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/home/rakem/Desktop/Blinkist-App/blinkist/src/stories/Atoms/Avatar/MyAvatar.stories.tsx";

/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import { ComponentMeta, ComponentStory } from \"@storybook/react\";\nimport React from \"react\"\nimport MyAvatar from \"./MyAvatar\";\nexport default{\n\n    title:'Atoms/MyAvatar',\n    component:MyAvatar\n} as ComponentMeta<typeof MyAvatar>;\n\nconst Template:ComponentStory<typeof MyAvatar>= (args) => <MyAvatar {...args} />\n\nexport const AvatarWithA= Template.bind({});\nAvatarWithA.args={\n    alphabet:'A'\n};\n\n"; // @ts-ignore

var __LOCATIONS_MAP__ = {
  "AvatarWithA": {
    "startLoc": {
      "col": 48,
      "line": 10
    },
    "endLoc": {
      "col": 80,
      "line": 10
    },
    "startBody": {
      "col": 48,
      "line": 10
    },
    "endBody": {
      "col": 80,
      "line": 10
    }
  }
};



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Atoms/MyAvatar',
  component: _MyAvatar__WEBPACK_IMPORTED_MODULE_1__["default"]
});

const Template = args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_MyAvatar__WEBPACK_IMPORTED_MODULE_1__["default"], { ...args
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 18,
  columnNumber: 59
}, undefined);

_c = Template;
const AvatarWithA = Template.bind({});
AvatarWithA.args = {
  alphabet: 'A'
};
AvatarWithA.parameters = {
  storySource: {
    source: "(args) => <MyAvatar {...args} />"
  },
  ...AvatarWithA.parameters
};

var _c;

__webpack_require__.$Refresh$.register(_c, "Template");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=main.4a183ccb9fb36ad19ded.hot-update.js.map