{"version":3,"file":"main.f437da0078357a92a2c7.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;;AACA;AACA;AACA;AAFA;;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;;AADA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;;AAEA;AACA;AACA;AADA;AADA;;AAWA;AAAA;;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAUA;;AAbA;AACA;;;AADA;AAeA","sources":["webpack://blinkist/./src/components/Molecules /Buttons/Buttons.stories.tsx","webpack://blinkist/./src/components/Molecules /Buttons/Buttons.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import { ComponentMeta, ComponentStory } from \\\"@storybook/react\\\";\\nimport Buttons from \\\"./Buttons\\\";\\nimport AddIcon from \\\"@mui/icons-material/Add\\\";\\nexport default {\\n  title: \\\"Molecules/Buttons\\\",\\n  component: Buttons,\\n} as ComponentMeta<typeof Buttons>;\\n\\nconst Template: ComponentStory<typeof Buttons> = (args) => (\\n  <Buttons {...args} />\\n);\\n\\nexport const LibraryBasic = Template.bind({});\\nLibraryBasic.args = {\\n  variant: \\\"secondary\\\",\\n  color: \\\"success\\\",\\n  children: \\\"Add to Library\\\",\\n  startIcon: <AddIcon />,\\n};\\nexport const Library = Template.bind({});\\nLibrary.args = {\\n  variant: \\\"contained\\\",\\n  color: \\\"success\\\",\\n  children: \\\"Add to Library\\\",\\n  startIcon: <AddIcon />,\\n};\\nexport const basicButton = Template.bind({});\\nLibraryBasic.args = {\\n  variant: \\\"secondary\\\",\\n  color: \\\"success\\\",\\n  children: \\\"Add to Library\\\",\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"LibraryBasic\":{\"startLoc\":{\"col\":49,\"line\":9},\"endLoc\":{\"col\":1,\"line\":11},\"startBody\":{\"col\":49,\"line\":9},\"endBody\":{\"col\":1,\"line\":11}},\"Library\":{\"startLoc\":{\"col\":49,\"line\":9},\"endLoc\":{\"col\":1,\"line\":11},\"startBody\":{\"col\":49,\"line\":9},\"endBody\":{\"col\":1,\"line\":11}},\"basicButton\":{\"startLoc\":{\"col\":49,\"line\":9},\"endLoc\":{\"col\":1,\"line\":11},\"startBody\":{\"col\":49,\"line\":9},\"endBody\":{\"col\":1,\"line\":11}}};\n    \nimport { ComponentMeta, ComponentStory } from \"@storybook/react\";\nimport Buttons from \"./Buttons\";\nimport AddIcon from \"@mui/icons-material/Add\";\nexport default {\n  title: \"Molecules/Buttons\",\n  component: Buttons,\n} as ComponentMeta<typeof Buttons>;\n\nconst Template: ComponentStory<typeof Buttons> = (args) => (\n  <Buttons {...args} />\n);\n\nexport const LibraryBasic = Template.bind({});;\nLibraryBasic.args = {\n  variant: \"secondary\",\n  color: \"success\",\n  children: \"Add to Library\",\n  startIcon: <AddIcon />,\n};\nexport const Library = Template.bind({});;\nLibrary.args = {\n  variant: \"contained\",\n  color: \"success\",\n  children: \"Add to Library\",\n  startIcon: <AddIcon />,\n};\nexport const basicButton = Template.bind({});\nLibraryBasic.args = {\n  variant: \"secondary\",\n  color: \"success\",\n  children: \"Add to Library\",\n};\n\n\n\nLibraryBasic.parameters = { storySource: { source: \"(args) => (\\n  <Buttons {...args} />\\n)\" }, ...LibraryBasic.parameters };\nLibrary.parameters = { storySource: { source: \"(args) => (\\n  <Buttons {...args} />\\n)\" }, ...Library.parameters };\nbasicButton.parameters = { storySource: { source: \"(args) => (\\n  <Buttons {...args} />\\n)\" }, ...basicButton.parameters };","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  button: {\n    width: \"658px\",\n  },\n});\ninterface Props {\n  startIcon?: any;\n  variant?: any;\n  color?: any;\n  children?: any;\n}\nconst Buttons: React.FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  return (\n    <div>\n      <Button\n        startIcon={props.startIcon}\n        variant={props.variant}\n        color={props.color}\n      >\n        {props.children}\n      </Button>\n    </div>\n  );\n};\n\nexport default Buttons;\n"],"names":[],"sourceRoot":""}