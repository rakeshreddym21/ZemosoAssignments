{"version":3,"file":"main.4cec91064de7df393936.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAGA;;;;AAGA;AACA;AACA;AACA;AAFA;AADA;;AAWA;AAAA;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAiCA;;AAlDA;AACA;;;AADA;AAoDA","sources":["webpack://blinkist/./src/components/Organisms/GridOfBooks/GridOfBooks.tsx"],"sourcesContent":["import { Grid } from \"@mui/material\";\nimport React, { useState,useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-router-dom\";\n\nimport CurrentCard from \"../../Molecules/BookCard/CurrentCard\";\n// import CurrentlyReading from \"./CurrentlyReading\";\n\nconst useStyles = makeStyles({\n  grid: {\n    marginTop: \"25px\",\n    paddingRight: \"464px\",\n  },\n});\n\ninterface Props {\n  searchTerm: string;\n}\n\nconst GridOfBooks: React.FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n\nconst [CurrentlyReading, setCurrentlyReading] = useState([]);\n// window.onload=()=>{\n//   axios.get(\"http://localhost:3001/currentlyreading\").then((res) => {\n//       setCurrentlyReading(res.data);\n//     })\n// }\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/currentlyreading\").then((res) => {\n      setCurrentlyReading(res.data);\n    });\n  },[]);\n  \n  return (\n    <>\n      <Grid container className={classes.grid} >\n        <Grid container columnSpacing=\"140px\" rowSpacing=\"40px\">\n          {CurrentlyReading.filter((book: { name: string }) =>\n            book.name.toLowerCase().includes(props.searchTerm.toLowerCase())\n          ).map(\n            (book: {\n              id: number;\n              src: string;\n              name: string;\n              author: string;\n              duration: string;\n              noOfReads: string;\n            }) => (\n              <Grid key={book.id} item xs={12} sm={6} md={4}>\n                <CurrentCard\n                  key={book.id}\n                  image={require(`${book.src}`)}\n                  bookName={book.name}\n                  author={book.author}\n                  readTime={book.duration}\n                  reads={book.noOfReads}\n                  buttonName=\"Finished\"\n                  id={book.id}\n                  incCount={() => setCount(count + 1)}\n                />\n              </Grid>\n            )\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default GridOfBooks;\n"],"names":[],"sourceRoot":""}