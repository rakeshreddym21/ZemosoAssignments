{"ast":null,"code":"var _jsxFileName = \"/home/rakem/Desktop/Blinkist-App/blinkist/src/components/Organisms/GridOfBooks/GridOfBooks.tsx\",\n    _s = $RefreshSig$();\n\nimport { Grid } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CurrentCard from \"../../Molecules/BookCard/CurrentCard\";\nimport CurrentlyReading from \"./CurrentlyReading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  grid: {\n    marginTop: \"25px\",\n    paddingRight: \"464px\"\n  }\n});\n\nconst GridOfBooks = props => {\n  _s();\n\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.grid,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        columnSpacing: \"140px\",\n        rowSpacing: \"40px\",\n        children: CurrentlyReading.filter(book => book.name.toLowerCase().includes(props.searchTerm.toLowerCase())).map(book => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(CurrentCard, {\n            image: book.src,\n            bookName: book.name,\n            author: book.author,\n            readTime: book.duration,\n            reads: book.noOfReads,\n            buttonName: \"Finished\",\n            id: book.id,\n            incCount: () => setCount(count + 1)\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(GridOfBooks, \"0OAIu4PPhRjNAkw1q+LbZlZBn9U=\", false, function () {\n  return [useStyles];\n});\n\n_c = GridOfBooks;\nexport default GridOfBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridOfBooks\");","map":{"version":3,"sources":["/home/rakem/Desktop/Blinkist-App/blinkist/src/components/Organisms/GridOfBooks/GridOfBooks.tsx"],"names":["Grid","React","useState","makeStyles","CurrentCard","CurrentlyReading","useStyles","grid","marginTop","paddingRight","GridOfBooks","props","classes","count","setCount","filter","book","name","toLowerCase","includes","searchTerm","map","src","author","duration","noOfReads","id"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,eAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,IAAI,EAAE;AACJC,IAAAA,SAAS,EAAE,MADP;AAEJC,IAAAA,YAAY,EAAE;AAFV;AADqB,CAAD,CAA5B;;AAWA,MAAMC,WAA2C,GAAIC,KAAD,IAAW;AAAA;;AAC7D,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,CAAD,CAAlC;AAEA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAEU,OAAO,CAACL,IAAnC;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,aAAa,EAAC,OAA9B;AAAsC,QAAA,UAAU,EAAC,MAAjD;AAAA,kBACGF,gBAAgB,CAACU,MAAjB,CAAyBC,IAAD,IACvBA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCR,KAAK,CAACS,UAAN,CAAiBF,WAAjB,EAAjC,CADD,EAECG,GAFD,CAGEL,IAAD,iBAQE,QAAC,IAAD;AAAoB,UAAA,IAAI,MAAxB;AAAyB,UAAA,EAAE,EAAE,EAA7B;AAAiC,UAAA,EAAE,EAAE,CAArC;AAAwC,UAAA,EAAE,EAAE,CAA5C;AAAA,iCACE,QAAC,WAAD;AAEE,YAAA,KAAK,EAAEA,IAAI,CAACM,GAFd;AAGE,YAAA,QAAQ,EAAEN,IAAI,CAACC,IAHjB;AAIE,YAAA,MAAM,EAAED,IAAI,CAACO,MAJf;AAKE,YAAA,QAAQ,EAAEP,IAAI,CAACQ,QALjB;AAME,YAAA,KAAK,EAAER,IAAI,CAACS,SANd;AAOE,YAAA,UAAU,EAAC,UAPb;AAQE,YAAA,EAAE,EAAET,IAAI,CAACU,EARX;AASE,YAAA,QAAQ,EAAE,MAAMZ,QAAQ,CAACD,KAAK,GAAG,CAAT;AAT1B,aACOG,IAAI,CAACU,EADZ;AAAA;AAAA;AAAA;AAAA;AADF,WAAWV,IAAI,CAACU,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAXH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkCD,CAtCD;;GAAMhB,W;UACYJ,S;;;KADZI,W;AAwCN,eAAeA,WAAf","sourcesContent":["import { Grid } from \"@mui/material\";\nimport React, { useState } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport CurrentCard from \"../../Molecules/BookCard/CurrentCard\";\nimport CurrentlyReading from \"./CurrentlyReading\";\n\nconst useStyles = makeStyles({\n  grid: {\n    marginTop: \"25px\",\n    paddingRight: \"464px\",\n  },\n});\n\ninterface Props {\n  searchTerm: string;\n}\n\nconst GridOfBooks: React.FunctionComponent<Props> = (props) => {\n  const classes = useStyles();\n  const [count, setCount] = useState(0);\n\n  return (\n    <>\n      <Grid container className={classes.grid}>\n        <Grid container columnSpacing=\"140px\" rowSpacing=\"40px\">\n          {CurrentlyReading.filter((book: { name: string }) =>\n            book.name.toLowerCase().includes(props.searchTerm.toLowerCase())\n          ).map(\n            (book: {\n              id: number;\n              src: string;\n              name: string;\n              author: string;\n              duration: string;\n              noOfReads: string;\n            }) => (\n              <Grid key={book.id} item xs={12} sm={6} md={4}>\n                <CurrentCard\n                  key={book.id}\n                  image={book.src}\n                  bookName={book.name}\n                  author={book.author}\n                  readTime={book.duration}\n                  reads={book.noOfReads}\n                  buttonName=\"Finished\"\n                  id={book.id}\n                  incCount={() => setCount(count + 1)}\n                />\n              </Grid>\n            )\n          )}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default GridOfBooks;\n"]},"metadata":{},"sourceType":"module"}