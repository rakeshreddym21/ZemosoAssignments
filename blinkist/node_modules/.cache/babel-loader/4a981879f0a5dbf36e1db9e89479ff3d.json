{"ast":null,"code":"var _jsxFileName = \"/home/rakem/Desktop/Blinkist-App/blinkist/src/components2/molecules/navItems/navItems.tsx\";\nimport { Icon } from '../../atoms/Icon/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Nav = props => {\n  var cname = \"nav \";\n\n  if (props.extendedNav) {\n    cname += \"extendedNav\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cname,\n      onClick: e => {\n        if (props.onClick) props.onClick(e);\n      },\n      children: [props.iconLeft ? /*#__PURE__*/_jsxDEV(Icon, {\n        icon: props.iconUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 31\n      }, this) : null, props.text, props.iconRight ? /*#__PURE__*/_jsxDEV(Icon, {\n        icon: props.iconUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 32\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = Nav;\nNav.defaultProps = {\n  onClick: () => {}\n};\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/home/rakem/Desktop/Blinkist-App/blinkist/src/components2/molecules/navItems/navItems.tsx"],"names":["Icon","Nav","props","cname","extendedNav","e","onClick","iconLeft","iconUrl","text","iconRight","defaultProps"],"mappings":";AAAA,SAASA,IAAT,QAAqB,wBAArB;;;;AAcA,MAAMC,GAAG,GAAIC,KAAD,IAA0B;AAClC,MAAIC,KAAK,GAAG,MAAZ;;AACA,MAAGD,KAAK,CAACE,WAAT,EAAqB;AACjBD,IAAAA,KAAK,IAAE,aAAP;AACH;;AACD,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAEA,KAAhB;AAAuB,MAAA,OAAO,EAAGE,CAAD,IAAK;AAAC,YAAGH,KAAK,CAACI,OAAT,EAAiBJ,KAAK,CAACI,OAAN,CAAcD,CAAd;AAAkB,OAAzE;AAAA,iBACMH,KAAK,CAACK,QAAN,gBAAgB,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEL,KAAK,CAACM;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAhB,GAA8C,IADpD,EAEKN,KAAK,CAACO,IAFX,EAGMP,KAAK,CAACQ,SAAN,gBAAiB,QAAC,IAAD;AAAM,QAAA,IAAI,EAAER,KAAK,CAACM;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAjB,GAA+C,IAHrD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AASH,CAdD;;KAAMP,G;AAgBNA,GAAG,CAACU,YAAJ,GAAmB;AACfL,EAAAA,OAAO,EAAG,MAAI,CAAE;AADD,CAAnB;AAGA,eAAeL,GAAf","sourcesContent":["import { Icon } from '../../atoms/Icon/icons';\ninterface NavRequiredInterface{\n    // class:string;\n    text:string;\n    iconLeft:boolean;\n    iconRight:boolean;\n    iconUrl:string;\n    extendedNav :boolean;\n}\ninterface DefaultNav{\n    onClick?:Function;\n}\ninterface NavItemInterface extends NavRequiredInterface,DefaultNav{}\n\nconst Nav = (props:NavItemInterface)=>{\n    var cname = \"nav \";\n    if(props.extendedNav){\n        cname+=\"extendedNav\";\n    }\n    return (\n        <>\n        <div className={cname} onClick={(e)=>{if(props.onClick)props.onClick(e);}}>\n            { props.iconLeft? <Icon icon={props.iconUrl}/>: null }\n            {props.text}\n            { props.iconRight? <Icon icon={props.iconUrl}/>: null }\n        </div>\n        </>\n    )\n}\n\nNav.defaultProps = { \n    onClick : ()=>{},\n};\nexport default Nav;"]},"metadata":{},"sourceType":"module"}