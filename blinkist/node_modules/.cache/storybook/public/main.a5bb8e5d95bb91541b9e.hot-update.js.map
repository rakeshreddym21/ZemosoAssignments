{"version":3,"file":"main.a5bb8e5d95bb91541b9e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAEA;AACA;;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AACA;AAFA;AAhBA;;AAmCA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAoBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AA4BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AA3EA;AAwGA;;AAnIA;AACA;;;AADA;AAqIA","sources":["webpack://blinkist/./src/components/Organisms/TrendingBlinks/TrendingBlinks.tsx"],"sourcesContent":["import { Grid, InputAdornment, TextField, Typography } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { ExplorePageCard } from \"../../Molecules/BookCard/BookCard.stories\";\n// import TrendingBlinksData from \"./TrendingBlinksdata\";\n// import JustAddedData from \"./JustAddeddata\";\n// import FeaturedAudioBlinksData from \"./FeaturedAudioBlinksdata\";\nimport { Link } from \"react-router-dom\";\nimport SearchOutlinedIcon from \"@mui/icons-material/SearchOutlined\";\nimport axios from \"axios\";\n// import imgae_1 from \"./1.png\"\n// import { Image } from \"@mui/icons-material\";\nconst useStyles = makeStyles({\n  grid: {\n    marginTop: \"80px\",\n    paddingRight: \"464px\",\n  },\n  heading: {\n    height: \"30px\",\n    left: \"0px\",\n    top: \"0px\",\n    fontFamily: \"Raleway\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\",\n    lineHeight: \"30px\",\n    color: \"#03314B\",\n  },\n  searchField: {\n    marginLeft: \"20px\",\n    marginBottom: \"0px\",\n  },\n});\n\ntype Book = {\n  name: string;\n};\ntype WholeBook = {\n  // id: React.Key | null | undefined;\n  id: number;\n  type: string;\n  src: string;\n  name: string;\n  author: string;\n  duration: string;\n  noOfReads: string;\n};\nconst TrendingBlinks: React.FunctionComponent = () => {\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [JustAddedData, setJustAddedData] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/justadded\").then((res) => {\n      setJustAddedData(res.data);\n    });\n  }, []);\n  const [TrendingBlinksData, setTrendingBlinksData] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/trendingblinks\").then((res) => {\n      setTrendingBlinksData(res.data);\n    });\n  }, []);\n  const [FeaturedAudioBlinksData, setFeaturedAudioBlinksData] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3001/featuredaudioblinks\").then((res) => {\n      setFeaturedAudioBlinksData(res.data);\n    });\n  }, []);\n  const type1 = \"Trending Blinks\";\n  const type2 = \"Just Added\";\n  const type3 = \"Featured Audio Blinks\";\n\n  return (\n    <>\n      <div id=\"searchbar\" style={{ marginTop: \"58px\" }}>\n        <TextField\n          id=\"search\"\n          label=\"Search by title or author\"\n          onChange={(event) => setSearchTerm(event.target.value)}\n          style={{ width: \"658px\" }}\n          className={classes.searchField}\n          variant=\"standard\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchOutlinedIcon style={{ color: \"#3A4649\" }} />\n              </InputAdornment>\n            ),\n          }}\n        >\n          {\" \"}\n        </TextField>\n      </div>\n\n      <Grid container className={classes.grid}>\n        <Grid item style={{ marginBottom: \"25px\" }}>\n          <Typography className={classes.heading} fontWeight={700}>\n            Trending Blinks\n          </Typography>\n        </Grid>\n        <Grid container columnSpacing=\"140px\" rowSpacing=\"40px\">\n          {TrendingBlinksData.filter((book: Book) =>\n            book.name.toLowerCase().includes(searchTerm.toLowerCase())\n          ).map((book: WholeBook) => (\n            <Grid key={book.id} item xs={12} sm={6} md={4}>\n              <Link to=\"/bookdetail\" style={{ textDecoration: \"none\" }}>\n                <ExplorePageCard\n                  id={book.id}\n                  type={type1}\n                  key={book.id}\n                  image={require(`${book.src}`)}\n                  bookName={book.name}\n                  author={book.author}\n                  readTime={book.duration}\n                  reads={book.noOfReads}\n                />\n              </Link>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.grid}>\n        <Grid item style={{ marginBottom: \"25px\" }}>\n          <Typography className={classes.heading} fontWeight={700}>\n            Just Added\n          </Typography>\n        </Grid>\n        <Grid container columnSpacing=\"140px\" rowSpacing=\"40px\">\n          {JustAddedData.filter((book: Book) =>\n            book.name.toLowerCase().includes(searchTerm.toLowerCase())\n          ).map((book: WholeBook) => (\n            <Grid key={book.id} item xs={12} sm={6} md={4}>\n              <ExplorePageCard\n                id={book.id}\n                type={type1}\n                key={book.id}\n                image={require(`${book.src}`)}\n                bookName={book.name}\n                author={book.author}\n                readTime={book.duration}\n                reads={book.noOfReads}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.grid}>\n        <Grid item style={{ marginBottom: \"25px\" }}>\n          <Typography className={classes.heading} fontWeight={700}>\n            Featured Audio blinks\n          </Typography>\n        </Grid>\n        <Grid container columnSpacing=\"140px\" rowSpacing=\"40px\">\n          {FeaturedAudioBlinksData.filter((book: Book) =>\n            book.name.toLowerCase().includes(searchTerm.toLowerCase())\n          ).map((book: WholeBook) => (\n            <Grid key={book.id} item xs={12} sm={6} md={4}>\n              {/* <img src = {book.src}/> */}\n\n              <ExplorePageCard\n                id={book.id}\n                type={type3}\n                key={book.id}\n                image={require(`${book.src}`)}\n                bookName={book.name}\n                author={book.author}\n                readTime={book.duration}\n                reads={book.noOfReads}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default TrendingBlinks;\n"],"names":[],"sourceRoot":""}